# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en_US
    Sylius\ShopApiPlugin\Request\Customer\RegisterCustomerRequest: [ app_register_customer ]

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: [ 'controller.service_arguments' ]

    sylius.shop_api_plugin.controller.customer.register_customer_action:
        class: App\Controller\RegisterCustomerAction
        autowire: false
        public: true
        arguments:
            - '@fos_rest.view_handler'
            - '@sylius_shop_api_plugin.command_bus'
            - '@sylius.shop_api_plugin.factory.validation_error_view_factory'
            - '@sylius.context.channel'
            - '@sylius.shop_api_plugin.command_provider.register_customer'

    App\Controller\RegisterCustomerAction: '@sylius.shop_api_plugin.controller.customer.register_customer_action'
